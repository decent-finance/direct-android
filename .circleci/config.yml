version: 2.1

executors:
  android:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/direct

jobs:
  prepare:
    executor: android
    steps:
      - checkout
      - run:
          name: Load data
          command: sh load.sh
      - run:
          name: Get services.json
          command: echo $GOOGLE_SERVICES | base64 -d >> ~/direct/app/google-services.json
      - persist_to_workspace:
          root: ~/direct
          paths:
            - config.properties
            - app/google-services.json

  test:
    executor: android
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          at: ~/direct
      - run:
          name: Make gradlew executable
          command: chmod +x gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew detekt lib:lintDevDebug lib:testDevDebugUnitTest
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: lib/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: lib/build/test-results

  test_instrumented:
    executor: android
    environment:
      #      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false
    steps:
      - checkout
      - attach_workspace:
          at: ~/direct
      - run:
          name: Make gradlew executable
          command: chmod +x gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Assemble APKs
          command: |
            ./gradlew :app:assembleDevDebug
            ./gradlew :app:assembleDevDebugAndroidTest
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GCLOUD_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud firebase test android run \
              --app app/build/outputs/apk/dev/debug/app-dev-debug.apk \
              --test app/build/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk \
              --device model=Pixel2,version=28,locale=en,orientation=portrait \
              --num-flaky-test-attempts=1 \
              --use-orchestrator | tee -a ~/ftl.txt
      - store_artifacts:
          path: ~/ftl.txt
          destination: ftl.txt
  #      - run:
  #          name: Export bucket name
  #          command: source bucket.sh ~/ftl.txt
  #      - run:
  #          name: Install gsutil dependency and copy test results data
  #          command: |
  #            sudo pip install -U crcmod
  #            sudo gsutil -m cp -r -U `sudo gsutil ls gs://${BUCKET} | tail -1` ${CIRCLE_ARTIFACTS}/ | true

  assemble_debug:
    executor: android
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          at: ~/direct
      - run:
          name: Make gradlew executable
          command: chmod +x gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Assemble debug
          command: ./gradlew assembleDevDebug
      - run:
          name: Upload to Firebase
          command: ./gradlew appDistributionUploadDevDebug
      - run:
          name: Rename apk
          command: |
            mkdir ~/apk
            mv app/build/outputs/apk/dev/debug/app-dev-debug.apk ~/apk/direct-dev-${CIRCLE_BRANCH}-${CIRCLE_SHA1}.apk
      - store_artifacts:
          path: ~/apk

  assemble_uat:
    executor: android
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          at: ~/direct
      - run:
          name: Make gradlew executable
          command: chmod +x gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Assemble uat
          command: ./gradlew assembleUatDebug
      - run:
          name: Upload to Firebase
          command: ./gradlew appDistributionUploadUatDebug
      - run:
          name: Rename apk
          command: |
            mkdir ~/apk
            mv app/build/outputs/apk/uat/debug/app-uat-debug.apk ~/apk/direct-uat-${CIRCLE_BRANCH}-${CIRCLE_SHA1}.apk
      - store_artifacts:
          path: ~/apk

  publish:
    executor: android
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - attach_workspace:
          at: ~/direct
      - run:
          name: Make gradlew executable
          command: chmod +x gradlew
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Assemble release
          command: ./gradlew lib:assembleProdRelease
      - run:
          name: Publish artifact
          command: ./gradlew lib:bintrayUpload

workflows:
  version: 2.1
  build:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - test_instrumented:
          requires:
            - prepare
          filters:
            branches:
              only:
                - master
                - dev
      - assemble_debug:
          requires:
            - test
            - test_instrumented
      - assemble_uat:
          requires:
            - test
            - test_instrumented
      - approve_publish:
          type: approval
          requires:
            - test
          filters:
            branches:
              only: master
      - publish:
          requires:
            - approve_publish
          filters:
            branches:
              only: master
