apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'io.fabric'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'com.google.firebase.appdistribution'
apply from: '../config.gradle'

buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'com.google.firebase:firebase-appdistribution-gradle:1.3.0'
    }
}

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.cexdirect.sample"

        minSdkVersion 21

        targetSdkVersion 28

        versionCode 1
        versionName "${new Date().format("yyyyMMdd-HHmm")}-${grgit.head().abbreviatedId}"

        testInstrumentationRunner 'com.cexdirect.lib.MockRunner'

        buildConfigField('String', 'BRANCH_NAME', "\"${grgit.branch.current().name}\"")
        buildConfigField('String', 'BUILD_DATE', "\"${new Date().toString()}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        animationsDisabled true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {

        androidTest {
            setRoot '../libtest/src/androidTest'
        }
    }

    flavorDimensions 'default'

    productFlavors {

        dev {
            buildConfigField('String', 'PLACEMENT_ID', "\"${project.ext.configProperties['devPlacementId']}\"")
            buildConfigField('String', 'SECRET', "\"${project.ext.configProperties['devSecret']}\"")

            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'

            firebaseAppDistribution {
                releaseNotes = "DEV/${grgit.branch.current().name}"
                groups = "cexd-android"
            }
        }

        uat {
            buildConfigField('String', 'PLACEMENT_ID', "\"${project.ext.configProperties['uatPlacementId']}\"")
            buildConfigField('String', 'SECRET', "\"${project.ext.configProperties['uatSecret']}\"")

            applicationIdSuffix '.uat'
            versionNameSuffix '-uat'

            firebaseAppDistribution {
                releaseNotes = "UAT/${grgit.branch.current().name}"
                groups = "cexd-android"
            }
        }

        prod {
            buildConfigField('String', 'PLACEMENT_ID', "\"${project.ext.configProperties['prodPlacementId']}\"")
            buildConfigField('String', 'SECRET', "\"${project.ext.configProperties['prodSecret']}\"")

            firebaseAppDistribution {
                releaseNotes = "PROD/${grgit.branch.current().name}"
                groups = "cexd-android"
            }
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("uat") || names.contains("dev")) {
            setIgnore variant.buildType.name == "release"
        }
    }
}

allOpen {
    annotation 'com.cexdirect.lib.OpenForTesting'
}

ext {
    okHttpVersion = '4.2.0'
    hyperionVersion = '0.9.27'
}

dependencies {
    implementation project(':lib')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0'
    debugImplementation 'androidx.fragment:fragment-testing:1.2.0-rc03'
//    debugImplementation "com.willowtreeapps.hyperion:hyperion-core:$hyperionVersion"
//    debugImplementation "com.willowtreeapps.hyperion:hyperion-attr:$hyperionVersion"
//    debugImplementation "com.willowtreeapps.hyperion:hyperion-crash:$hyperionVersion"

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:core:$testCoreVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "com.github.fabioCollini.DaggerMock:daggermock:$daggerMockVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestUtil "androidx.test:orchestrator:$orchestratorVersion"
    // Without the following dependency instrumented tests fail with NoClassDefFoundError
    kaptAndroidTest "androidx.databinding:databinding-compiler:$databindVersion"
}

apply plugin: 'com.google.gms.google-services'
