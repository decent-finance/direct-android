apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.cmgapps.licenses'
apply from: '../config.gradle'

import com.cmgapps.license.OutputType

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

version '1.0.0-alpha2'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionName this.version

        testInstrumentationRunner 'com.cexdirect.lib.MockRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        animationsDisabled true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            returnDefaultValues true
            includeAndroidResources true
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {

        androidTest {
            setRoot '../libtest/src/androidTest'
        }
    }

    flavorDimensions 'default'

    productFlavors {

        dev {
            buildConfigField 'String', 'REST_URL', "\"${project.ext.configProperties['devRestUrl']}\""
            buildConfigField 'String', 'WS_URL', "\"${project.ext.configProperties['devWsUrl']}\""
        }

        uat {
            buildConfigField 'String', 'REST_URL', "\"${project.ext.configProperties['uatRestUrl']}\""
            buildConfigField 'String', 'WS_URL', "\"${project.ext.configProperties['uatWsUrl']}\""
        }

        prod {
            buildConfigField 'String', 'REST_URL', '\"https://api.cexdirect.com/\"'
            buildConfigField 'String', 'WS_URL', '\"wss://wss.cexdirect.com\"'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-proguard-rules.pro'
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("uat") || names.contains("dev")) {
            setIgnore variant.buildType.name.toLowerCase() == "release"
        }
    }

    defaultPublishConfig 'prodRelease'
}

licenses {
    outputType = OutputType.TEXT
}

allOpen {
    annotation 'com.cexdirect.lib.OpenForTesting'
}

ext {
    // lib deps versions
    lifecycleVersion = '2.0.0'
    coroutinesVersion = '1.3.0'
    daggerVersion = '2.24'
    permissionDispatcherVersion = '4.5.0'
    okHttpVersion = '4.1.0'
    retrofitVersion = '2.6.1'
    glideVersion = '4.9.0'

    // test deps versions
    junitVersion = '5.4.0'
    espressoVersion = '3.2.0'
    assertjVersion = '2.9.1'
    daggerMockVersion = '0.8.5'
    mockitoKotlinVersion = '2.1.0'
}

dependencies {
    api 'androidx.appcompat:appcompat:1.0.2'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'com.google.android.material:material:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    api "org.permissionsdispatcher:permissionsdispatcher:$permissionDispatcherVersion"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permissionDispatcherVersion"

    api "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    api 'com.github.mukeshsolanki:country-picker-android:2.0.1'
    api 'com.mcxiaoke.koi:core:0.5.5'
    api 'com.shopify:livedata-ktx:3.0.0'
    api 'com.github.amarjain07:StickyScrollView:1.0.2'
    api 'ru.noties.markwon:core:3.1.0'

    api "com.squareup.okhttp3:okhttp:$okHttpVersion"
    api "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    api 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    api "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    api 'org.bouncycastle:bcprov-jdk15on:1.62'

//    debugApi 'androidx.fragment:fragment-testing:1.2.0-alpha01'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
//    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion" // Duplicate class
    androidTestImplementation "org.assertj:assertj-core:$assertjVersion"
    androidTestImplementation "com.github.fabioCollini.DaggerMock:daggermock:$daggerMockVersion"
    androidTestImplementation 'org.mockito:mockito-android:3.0.0'
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
//    androidTestImplementation 'com.github.fabric8io:mockwebserver:0.1.2'
    androidTestUtil 'androidx.test:orchestrator:1.2.0'
    // Without the following dependency instrumented tests fail with NoClassDefFoundError
    kaptAndroidTest 'androidx.databinding:databinding-compiler:3.5.0'

    detektPlugins 'io.gitlab.arturbosch.detekt:detekt-formatting:1.0.1'
}

apply from: 'publish.gradle'
